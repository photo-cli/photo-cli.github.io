"use strict";(self.webpackChunkphoto_cli_documentation=self.webpackChunkphoto_cli_documentation||[]).push([[23],{9045:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});var n=s(5893),d=s(1151);const i={sidebar_position:4},o="4. Building Your Own Address With Selected Properties",t={id:"address-building-reverse-geocoding/building-your-own-address-with-selected-properties",title:"4. Building Your Own Address With Selected Properties",description:"Every reverse geocode provider has its address building parameters. With address command you can inspect any photograph's reverse geocode response. These different levels of selected address properties will be used in exported into CSV file for info command or used as file and/or folder names depending on your naming strategies for copy command.",source:"@site/docs/address-building-reverse-geocoding/building-your-own-address-with-selected-properties.md",sourceDirName:"address-building-reverse-geocoding",slug:"/address-building-reverse-geocoding/building-your-own-address-with-selected-properties",permalink:"/docs/address-building-reverse-geocoding/building-your-own-address-with-selected-properties",draft:!1,unlisted:!1,editUrl:"https://github.com/photo-cli/photo-cli.github.io/tree/main/docs/address-building-reverse-geocoding/building-your-own-address-with-selected-properties.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"3. Understanding Reverse Geocode Response",permalink:"/docs/address-building-reverse-geocoding/understanding-reverse-geocode-response"},next:{title:"5. Merging Selected Address Level Properties Into Single Address",permalink:"/docs/address-building-reverse-geocoding/merging-selected-address-level-properties-into-single-address"}},a={},l=[{value:"Big Data Cloud Parameters",id:"big-data-cloud-parameters",level:4},{value:"Open Street Map Parameters",id:"open-street-map-parameters",level:4},{value:"Google Maps Properties",id:"google-maps-properties",level:4}];function c(e){const r={a:"a",code:"code",h1:"h1",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"4-building-your-own-address-with-selected-properties",children:"4. Building Your Own Address With Selected Properties"}),"\n",(0,n.jsxs)(r.p,{children:["Every reverse geocode provider has its address building parameters. With ",(0,n.jsx)(r.code,{children:"address"})," command you can inspect any photograph's reverse geocode response. These different levels of selected address properties will be used in exported into CSV file for ",(0,n.jsx)(r.a,{href:"/docs/commands-verbs/info",children:"info command"})," or used as file and/or folder names depending on your naming strategies for ",(0,n.jsx)(r.a,{href:"/docs/commands-verbs/copy",children:"copy command"}),"."]}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Reverse Geocode Provider"}),(0,n.jsx)(r.th,{children:"Address Building Parameters"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://www.bigdatacloud.com/geocoding-apis/reverse-geocode-to-city-api/",children:"BigDataCloud"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"#big-data-cloud-parameters",children:"BigDataCloud Properties"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://nominatim.org/release-docs/latest/api/Reverse/",children:"Open Street Map Foundation - Nominatim"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"#open-street-map-parameters",children:"OpenStreet Properties"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://developers.google.com/maps/documentation/geocoding/overview/",children:"GoogleMaps"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"#google-maps-properties",children:"GoogleMaps Properties"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"https://locationiq.com/sandbox/geocoding/reverse/",children:"LocationIq"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.a,{href:"#open-street-map-parameters",children:"OpenStreet Properties"})})]})]})]}),"\n",(0,n.jsx)(r.h4,{id:"big-data-cloud-parameters",children:"Big Data Cloud Parameters"}),"\n",(0,n.jsx)(r.p,{children:"Getting a sample reverse geocoding response with all properties listed."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"photo-cli address -i DSC_7082.jpg -e 1\n"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"AdminLevel2: Turkey\nAdminLevel3: Central Anatolia Region\nAdminLevel4: Ankara Province\nAdminLevel6: \xc7ankaya\nAdminLevel8: Mebusevleri Mahallesi\n"})}),"\n",(0,n.jsxs)(r.p,{children:["If we want to build an address like with levels only contains ",(0,n.jsx)(r.code,{children:"Turkey"}),", ",(0,n.jsx)(r.code,{children:"Ankara Province"}),", and ",(0,n.jsx)(r.code,{children:"\xc7ankaya"}),", we should use levels ",(0,n.jsx)(r.code,{children:"2,4,6"}),". To verify our address is building correctly, you may use ",(0,n.jsx)(r.code,{children:"type"})," parameter as ",(0,n.jsx)(r.code,{children:"SelectedProperties"})," and ",(0,n.jsx)(r.code,{children:"bigdatacloud-levels"})," arguments separated with space like the following example."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"photo-cli address --input DSC_7082.jpg --reverse-geocode BigDataCloud --type SelectedProperties --bigdatacloud-levels 2 4 6\n"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"Turkey\nAnkara Province\n\xc7ankaya\n"})}),"\n",(0,n.jsx)(r.h4,{id:"open-street-map-parameters",children:"Open Street Map Parameters"}),"\n",(0,n.jsx)(r.p,{children:"Getting a sample reverse geocoding response with all properties listed."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"photo-cli address -i DSC_7082.jpg -e 2\n"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"CountryCode: tr\nCountry: T\xfcrkiye\nRegion: \u0130\xe7 Anadolu B\xf6lgesi\nProvince: Ankara\nCity: Ankara\nTown: \xc7ankaya\nPostcode: 06430\nSuburb: Y\xfccetepe Mahallesi\nRoad: \u0130lk Sokak\nMilitary: An\u0131tkabir\n"})}),"\n",(0,n.jsxs)(r.p,{children:["If we want to build an address like with levels only contains ",(0,n.jsx)(r.code,{children:"tr"}),", ",(0,n.jsx)(r.code,{children:"06430"}),", and ",(0,n.jsx)(r.code,{children:"Y\xfccetepe Mahallesi"}),", we should use properties ",(0,n.jsx)(r.code,{children:"CountryCode, Postcode, Suburb"}),". To verify our address is building correctly, you may use ",(0,n.jsx)(r.code,{children:"type"})," as ",(0,n.jsx)(r.code,{children:"SelectedProperties"})," and ",(0,n.jsx)(r.code,{children:"openstreetmap-properties"})," arguments separated with space like the following example."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"photo-cli address --input DSC_7082.jpg --reverse-geocode OpenStreetMapFoundation --type SelectedProperties --openstreetmap-properties CountryCode Postcode Suburb\n"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"tr\n06430\nY\xfccetepe Mahallesi\n"})}),"\n",(0,n.jsx)(r.h4,{id:"google-maps-properties",children:"Google Maps Properties"}),"\n",(0,n.jsx)(r.p,{children:"Getting a sample reverse geocoding response with all properties listed."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"photo-cli address -i DSC_7082.jpg -e GoogleMaps\n"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"plus_code: WRGM+2W\nadministrative_area_level_2: \xc7ankaya\nadministrative_area_level_1: Ankara\ncountry: Turkey\nroute: An\u0131tkabir\nadministrative_area_level_4: Mebusevleri\npostal_code: 06570\nstreet_number: 108\n"})}),"\n",(0,n.jsxs)(r.p,{children:["If we want to build an address like with levels only contains ",(0,n.jsx)(r.code,{children:"Mebusevleri"}),", ",(0,n.jsx)(r.code,{children:"108"}),", and ",(0,n.jsx)(r.code,{children:"An\u0131tkabir"}),", we should use properties ",(0,n.jsx)(r.code,{children:"administrative_area_level_4, street_number, route"}),". To verify our address is building correctly, you may use ",(0,n.jsx)(r.code,{children:"type"})," as ",(0,n.jsx)(r.code,{children:"SelectedProperties"})," and ",(0,n.jsx)(r.code,{children:"googlemaps-types"})," arguments separated with space like the following example."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"photo-cli address --input DSC_7082.jpg --reverse-geocode GoogleMaps --type SelectedProperties --googlemaps-types administrative_area_level_4 street_number route\n"})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"Mebusevleri\n108\nAn\u0131tkabir\n"})})]})}function p(e={}){const{wrapper:r}={...(0,d.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,r,s)=>{s.d(r,{Z:()=>t,a:()=>o});var n=s(7294);const d={},i=n.createContext(d);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);